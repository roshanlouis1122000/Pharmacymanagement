{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ng2-google-charts/src/lib/google-charts-loader.service.ts","../../../projects/ng2-google-charts/src/lib/google-charts-datatable.ts","../../../projects/ng2-google-charts/src/lib/google-chart/google-chart.component.ts","../../../projects/ng2-google-charts/src/lib/google-chart/chart-html-tooltip.ts","../../../projects/ng2-google-charts/src/lib/google-charts-dashboard/google-charts-dashboard.component.ts","../../../projects/ng2-google-charts/src/lib/google-charts-control/google-charts-control.component.ts","../../../projects/ng2-google-charts/src/lib/ng2-google-charts.module.ts","../../../projects/ng2-google-charts/src/lib/google-chart-editor.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","__values","o","m","GoogleChartsLoaderService","localeId","googleChartsSettings","_this","loadedPackages","loaded","defaultSettings","googleChartsVersion","language","assign","googleScriptLoadingNotifier","EventEmitter","googleChartLoadingNotifier","googleScriptIsLoading","googleChartIsLoading","loadGoogleChartsScriptPromise","google","charts","subscribe","script","document","createElement","type","src","async","defer","onload","emit","onerror","getElementsByTagName","appendChild","prototype","load","settings","_a","doLoad","packages","pkgs","filter","p","indexOf","_settings","callback","concat","Injectable","providedIn","Inject","LOCALE_ID","Optional","GoogleChartsDataTable","opt","dataTableChanged","_setDataTable","dataTable","firstRowIsData","send","undefined","query","queryResponse","setDataTable","getDataTable","queryCallback","init","tid","window","clearInterval","dataSourceUrl","visualization","Query","setQuery","timeout","setTimeout","refreshInterval","setInterval","dt","Array","isArray","arrayToDataTable","reformat","formatters","_d","_e","formatterConfig","formatter","formatterConstructor","formatterOptions","options","fmtOptions","_f","e_2","ranges","_g","range","addGradientRange","from","to","color","fromBgColor","toBgColor","addRange","bgcolor","_h","e_3","columns","_j","col","format","PatternFormat","pattern","dstColumnIndex","Output","GoogleChartType","ChartHTMLTooltip","el","setPosition","x","nativeElement","style","left","PIXELS","top","getDOMElement","GoogleChartComponent","loaderService","selectListener","event","message","row","column","selectedRowValues","selectedRowFormattedValues","columnLabel","s","wrapper","getSelection","gs","selection","numberOfColumns","getNumberOfColumns","getValue","getFormattedValue","getColumnLabelAtPosition","name","chartSelect","chartSelectOneTime","chartReady","chartReadyOneTime","chartError","chartErrorOneTime","mouseOver","mouseOverOneTime","mouseOut","mouseOutOneTime","regionClick","regionClickOneTime","ngOnInit","HTMLel","querySelector","isExtensible","data","component","draw","recreateWrapper","getChartType","chartType","_draw","temp","ChartWrapper","registerChartWrapperEvents","err","convertOptions","setOptions","getSelectorBySeriesType","seriesType","bars","haxis","line","legend","area","getSeriesByColumn","series","role","getColumnRole","getColumnType","getBoundingBoxForItem","item","boundingBox","width","height","cli","selector","replace","box","getBoundingBox","getValueAtPosition","position","getColumnTypeAtPosition","getColumnLabel","getHTMLTooltip","tooltipER","ElementRef","parseMouseEvent","eventColumn","myItem","columnType","registerChartEvents","chart","getChart","getChartLayoutInterface","observers","events","addListener","tooltip","addOneTimeListener","error","source","eventType","listenerFn","evEmitter","Input","Component","template","GoogleChartsDashboardComponent","dashboard","Dashboard","bind","_b","b","controls","e_1","controls_1","controls_1_1","ensureInit","charts_1","charts_1_1","Error","map","GoogleChartsControlComponent","create","containerId","ControlWrapper","Ng2GoogleChartsModule","NgModule","declarations","providers","exports","GoogleChartEditor","createEditor","chartEditor","ChartEditor","getChartWrapper","comp","getOptions","openDialog","isComponent"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","declare var google: any;\n\nimport { Injectable, EventEmitter, LOCALE_ID, Inject, Optional } from '@angular/core';\nimport { GoogleChartsSettings } from './google-charts-interfaces';\n\ninterface InternalGoogleChartsSettings extends GoogleChartsSettings {\n  callback?(): any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleChartsLoaderService {\n\n  private googleScriptLoadingNotifier: EventEmitter<boolean>;\n  private googleChartLoadingNotifier: EventEmitter<void>;\n  private googleScriptIsLoading: boolean;\n  private googleChartIsLoading: boolean;\n  private loadGoogleChartsScriptPromise: Promise<void>;\n  private loadedPackages: string[] = [];\n  private loaded = false;\n\n  public constructor(\n    @Inject(LOCALE_ID) localeId: string,\n    @Inject('googleChartsSettings') @Optional() private googleChartsSettings: GoogleChartsSettings,\n  ) {\n    const defaultSettings: GoogleChartsSettings = {\n      googleChartsVersion: '47',\n      language: localeId,\n    };\n    this.googleChartsSettings = {...defaultSettings, ...this.googleChartsSettings};\n\n    this.googleScriptLoadingNotifier = new EventEmitter();\n    this.googleChartLoadingNotifier = new EventEmitter();\n    this.googleScriptIsLoading = false;\n    this.googleChartIsLoading = false;\n\n    this.loadGoogleChartsScriptPromise = new Promise((resolve, reject) => {\n      if (typeof google !== 'undefined' && google.charts) {\n        resolve();\n      } else if (!this.googleScriptIsLoading) {\n\n        this.googleScriptIsLoading = true;\n\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = 'https://www.gstatic.com/charts/loader.js';\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          this.googleScriptIsLoading = false;\n          this.googleScriptLoadingNotifier.emit(true);\n          resolve();\n        };\n        script.onerror = () => {\n          this.googleScriptIsLoading = false;\n          this.googleScriptLoadingNotifier.emit(false);\n          reject();\n        };\n        document.getElementsByTagName('head')[0].appendChild(script);\n\n      } else {\n        this.googleScriptLoadingNotifier.subscribe((loaded: boolean) => {\n          if (loaded) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      }\n    });\n  }\n\n  public async load(settings?: GoogleChartsSettings): Promise<void> {\n    await this.loadGoogleChartsScriptPromise;\n\n    await new Promise((resolve) => {\n\n      if (this.googleChartIsLoading) {\n        this.googleChartLoadingNotifier.subscribe(() => {\n          this.doLoad(resolve, settings);\n        });\n\n        return;\n      }\n\n      this.doLoad(resolve, settings);\n\n    });\n  }\n\n  private doLoad(resolve: (value?: unknown) => void, settings?: GoogleChartsSettings) {\n    settings = {...this.googleChartsSettings, ...settings}\n\n    if (!settings.packages && this.loaded) {\n      resolve();\n      return;\n    }\n\n    if (settings.packages) {\n      let pkgs = settings.packages.filter(p => this.loadedPackages.indexOf(p) < 0);\n\n      if (pkgs.length == 0 && this.loaded) {\n        resolve();\n        return;\n      }\n\n      settings.packages = pkgs;\n    }\n\n    const _settings: InternalGoogleChartsSettings = settings;\n    _settings.callback = () => {\n      this.googleChartIsLoading = false;\n      this.loadedPackages = this.loadedPackages.concat(_settings.packages);\n      this.loaded = true;\n      this.googleChartLoadingNotifier.emit();\n      resolve();\n    };\n\n    this.googleChartIsLoading = true;\n    google.charts.load(settings.googleChartsVersion, _settings);\n  }\n}\n","declare var google: any;\n\nexport interface ArrowFormatInterface {\n  base: number;\n}\n\nexport interface BarFormatInterface {\n  base?: number;\n  colorNegative?: string;\n  colorPositive?: string;\n  drawZeroLine?: boolean;\n  max?: number;\n  min?: number;\n  showValue?: boolean;\n  width?: number;\n}\n\nexport interface RangeInterface {\n  from: number | Date | number[];\n  to: number | Date | number[];\n  color?: string;\n  bgcolor?: string;\n  fromBgColor?: string;\n  toBgColor?: string;\n}\n\nexport interface ColorFormatInterface {\n  ranges?: RangeInterface[];\n}\n\nexport interface DateFormat {\n  formatType?: string;\n  pattern?: string;\n  timeZone?: number;\n}\n\nexport interface NumberFormatInterface {\n  decimalSymbol?: string;\n  fractionDigits?: number;\n  groupingSymbol?: string;\n  negativeColor?: string;\n  negativeParens?: boolean;\n  pattern?: string;\n  prefix?: string;\n  suffix?: string;\n}\n\nexport interface PatternFormatInterface {\n  pattern: string;\n  dstColumnIndex?: number;\n}\n\nexport interface FormatterInterface {\n  type: string;\n  options?: (\n    ArrowFormatInterface\n    | BarFormatInterface\n    | ColorFormatInterface\n    | DateFormat\n    | NumberFormatInterface\n    | PatternFormatInterface\n  );\n  columns: number[];\n}\n\nexport interface GoogleChartsDataTableInterface {\n  dataTable?: any;\n  firstRowIsData?: boolean;\n  query?: string;\n  dataSourceUrl?: string;\n\n  /** Refresh interval, in seconds, when using remote data source. */\n  refreshInterval?: number;\n\n  /** Timeout in seconds, when using remote data source */\n  timeout?: number;\n\n  /** Called after query executed. DataTable is updated automatically.\n   * @param queryResponse google.visualization.QueryResponse\n   */\n  queryCallback?: (queryResponse: any) => any;\n\n  formatters?: FormatterInterface[];\n  view?: string | object | object[];\n}\n\nimport {\n  EventEmitter,\n  Output,\n} from '@angular/core';\n\nexport class GoogleChartsDataTable {\n  private dataTable: any;\n  public query: any;\n  public tid: any;\n\n  @Output() dataTableChanged: EventEmitter<any> = new EventEmitter();\n\n  constructor(private opt: GoogleChartsDataTableInterface) {\n    if (opt) {\n      this._setDataTable(opt.dataTable, opt.firstRowIsData);\n    }\n  }\n\n  private send() {\n    if (this.query === undefined) {\n      return;\n    }\n    this.query.send((queryResponse: any) => {\n      this.setDataTable(queryResponse.getDataTable());\n      if (this.opt.queryCallback) {\n        this.opt.queryCallback(queryResponse);\n      }\n    });\n  }\n\n  public init(opt?: GoogleChartsDataTableInterface) {\n    if (opt) {\n      this.opt = opt;\n    }\n\n    if (this.tid !== undefined) {\n      // doesn't work, see https://github.com/google/google-visualization-issues/issues/2381\n      // this.query.abort();\n      window.clearInterval(this.tid);\n      this.tid = undefined;\n    }\n\n    if (this.opt.dataSourceUrl) {\n      this.query = new google.visualization.Query(this.opt.dataSourceUrl);\n      if (this.opt.query) {\n        this.query.setQuery(this.opt.query);\n      }\n      if (this.opt.timeout !== undefined) {\n        this.query.setTimeout(this.opt.timeout);\n      }\n      if (this.opt.refreshInterval) {\n        // this.query.setRefreshInterval(this.opt.refreshInterval);\n        this.tid = window.setInterval(() => {\n          this.send();\n        }, this.opt.refreshInterval * 1000);\n      }\n      this.send();\n    } else {\n      this.setDataTable(this.opt.dataTable);\n    }\n  }\n\n  /**\n   * @returns Underlying google.visualization.DataTable\n   */\n\n  public getDataTable() {\n    return this.dataTable;\n  }\n\n  public setDataTable(dt: any, firstRowIsData?: boolean) {\n    if (firstRowIsData === undefined) {\n      firstRowIsData = this.opt.firstRowIsData;\n    }\n    this._setDataTable(dt, firstRowIsData);\n    this.dataTableChanged.emit(this.dataTable);\n  }\n\n  private _setDataTable(dt: any, firstRowIsData?: boolean) {\n    if (Array.isArray(dt)) {\n      dt = google.visualization.arrayToDataTable(dt, firstRowIsData);\n    }\n    this.dataTable = dt;\n    this.reformat();\n  }\n\n  /**\n   * Applies formatters to data columns, if defined\n   */\n\n  public reformat() {\n    const dt = this.dataTable;\n    if (dt === undefined) {\n      return;\n    }\n\n    if (this.opt.formatters === undefined) {\n      return;\n    }\n\n    for (const formatterConfig of this.opt.formatters) {\n      let formatter: any;\n      if (formatterConfig.type === 'PatternFormat') {\n        const fmtOptions = formatterConfig.options as PatternFormatInterface;\n        formatter = new google.visualization.PatternFormat(fmtOptions.pattern);\n        formatter.format(dt, formatterConfig.columns, fmtOptions.dstColumnIndex);\n        continue;\n      }\n\n      const formatterConstructor = google.visualization[formatterConfig.type];\n      const formatterOptions = formatterConfig.options;\n      formatter = new formatterConstructor(formatterOptions);\n      if (formatterConfig.type === 'ColorFormat' && formatterOptions) {\n        const fmtOptions = formatterOptions as ColorFormatInterface;\n        for (const range of fmtOptions.ranges) {\n          if (typeof (range.fromBgColor) !== 'undefined'\n              && typeof (range.toBgColor) !== 'undefined') {\n            formatter.addGradientRange(range.from, range.to,\n              range.color, range.fromBgColor, range.toBgColor);\n          } else {\n            formatter.addRange(range.from, range.to, range.color, range.bgcolor);\n          }\n        }\n      }\n\n      for (const col of formatterConfig.columns) {\n        formatter.format(dt, col);\n      }\n    }\n  }\n}\n","declare var google: any;\n\nimport {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { GoogleChartsLoaderService } from '../google-charts-loader.service';\nimport { GoogleChartsDataTable, GoogleChartsDataTableInterface } from '../google-charts-datatable';\nimport { ChartReadyEvent } from './chart-ready-event';\nimport { ChartErrorEvent } from './chart-error-event';\nimport { ChartSelectEvent } from './chart-select-event';\nimport {\n  ChartMouseEvent,\n  ChartMouseOverEvent,\n  ChartMouseOutEvent,\n  BoundingBox,\n  DataPointPosition\n} from './chart-mouse-event';\nimport { ChartHTMLTooltip } from './chart-html-tooltip';\nimport { RegionClickEvent } from './geochart-events';\n\nexport interface GoogleChartInterface extends GoogleChartsDataTableInterface {\n  chartType: string | GoogleChartType;\n  options?: any;\n\n  component?: GoogleChartComponent;\n}\n\nexport enum GoogleChartType {\n  AnnotationChart = 'AnnotationChart',\n  AreaChart = 'AreaChart',\n  BarChart = 'BarChart',\n  BubbleChart = 'BubbleChart',\n  Calendar = 'Calendar',\n  CandlestickChart = 'CandlestickChart',\n  ColumnChart = 'ColumnChart',\n  ComboChart = 'ComboChart',\n  Gantt = 'Gantt',\n  Gauge = 'Gauge',\n  GeoChart = 'GeoChart',\n  Histogram = 'Histogram',\n  LineChart = 'LineChart',\n  Map = 'Map',\n  OrgChart = 'OrgChart',\n  PieChart = 'PieChart',\n  Sankey = 'Sankey',\n  ScatterChart = 'ScatterChart',\n  SteppedAreaChart = 'SteppedAreaChart',\n  Table = 'Table',\n  Timeline = 'Timeline',\n  TreeMap = 'TreeMap',\n  WordTree = 'WordTree'\n}\n\n@Component({\n  selector: 'google-chart',\n  template: '<div></div>',\n})\nexport class GoogleChartComponent implements OnInit {\n\n  @Input() public data: GoogleChartInterface;\n\n  @Output() public chartReady: EventEmitter<ChartReadyEvent>;\n  @Output() public chartReadyOneTime: EventEmitter<ChartReadyEvent>;\n\n  @Output() public chartError: EventEmitter<ChartErrorEvent>;\n  @Output() public chartErrorOneTime: EventEmitter<ChartErrorEvent>;\n\n  @Output() public chartSelect: EventEmitter<ChartSelectEvent>;\n  @Output() public chartSelectOneTime: EventEmitter<ChartSelectEvent>;\n\n  @Output() public mouseOver: EventEmitter<ChartMouseOverEvent>;\n  @Output() public mouseOverOneTime: EventEmitter<ChartMouseOverEvent>;\n\n  @Output() public mouseOut: EventEmitter<ChartMouseOutEvent>;\n  @Output() public mouseOutOneTime: EventEmitter<ChartMouseOutEvent>;\n\n  @Output() public regionClick: EventEmitter<RegionClickEvent>;\n  @Output() public regionClickOneTime: EventEmitter<RegionClickEvent>;\n\n  public wrapper: any;\n  private cli: any;\n  private options: any;\n\n  private HTMLel: HTMLElement;\n  private dataTable: GoogleChartsDataTable;\n\n  public constructor(private el: ElementRef,\n                     private loaderService: GoogleChartsLoaderService) {\n    this.chartSelect = new EventEmitter();\n    this.chartSelectOneTime = new EventEmitter();\n    this.chartReady = new EventEmitter();\n    this.chartReadyOneTime = new EventEmitter();\n    this.chartError = new EventEmitter();\n    this.chartErrorOneTime = new EventEmitter();\n    this.mouseOver = new EventEmitter();\n    this.mouseOverOneTime = new EventEmitter();\n    this.mouseOut = new EventEmitter();\n    this.mouseOutOneTime = new EventEmitter();\n    this.regionClick = new EventEmitter();\n    this.regionClickOneTime = new EventEmitter();\n  }\n\n  public ngOnInit(): void {\n    this.HTMLel = this.el.nativeElement.querySelector('div');\n    if (Object.isExtensible(this.data)) {\n      this.data.component = this;\n    }\n    this.options = this.data.options;\n\n    this.init().then(() => {\n      this.draw();\n    });\n  }\n\n  public async init() {\n    await this.loaderService.load();\n    this.recreateWrapper();\n  }\n\n  private recreateWrapper() {\n    if (this.wrapper === undefined || this.wrapper.getChartType() !== this.data.chartType) {\n      this.dataTable = new GoogleChartsDataTable(this.data);\n      this.dataTable.dataTableChanged.subscribe((dt: any) => {\n        this._draw();\n      });\n\n      // see dataTable in https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\n      let temp: GoogleChartInterface = this.data;\n      if (this.data.firstRowIsData) {\n        temp = Object.assign(temp, this.data);\n        temp.dataTable = this.dataTable.getDataTable();\n      }\n      this.wrapper = new google.visualization.ChartWrapper(temp);\n      this.registerChartWrapperEvents();\n\n      /* Calling draw even without data is the only way to pass the HTMl element\n         when using the chart in a dashboard. Don't do this in all other cases:\n         it breaks formatters with remote data source, hence the conditional. */\n      if (temp.dataTable === undefined && temp.dataSourceUrl === undefined) {\n        try {\n          this.wrapper.draw(this.HTMLel);\n        } catch (err) {}\n      }\n    }\n  }\n\n  private async _draw() {\n    const dt = this.dataTable.getDataTable();\n    if (dt === undefined) {\n      return;\n    }\n    this.convertOptions();\n    this.recreateWrapper();\n    this.wrapper.setOptions(this.options);\n    this.wrapper.setDataTable(dt);\n    this.wrapper.draw(this.HTMLel);\n  }\n\n  public getDataTable(): GoogleChartsDataTable {\n    return this.dataTable;\n  }\n\n  public draw(value?: GoogleChartInterface) {\n    if (value === undefined) {\n      value = this.data;\n    }\n    this.options = value.options;\n    this.dataTable.init(value);\n  }\n\n  private getSelectorBySeriesType(seriesType: string): string {\n    const selectors: any = {\n      bars : 'bar#%s#%r',\n      haxis : 'hAxis#0#label',\n      line: 'point#%s#%r',\n      legend : 'legendentry#%s',\n      area: 'point#%s#%r'\n    };\n\n    const selector: string = selectors[seriesType];\n\n    return selector;\n  }\n\n /**\n  * Given a column number, counts how many\n  * columns have rol==\"data\". Those are mapped\n  * one-to-one to the series array. When rol is not defined\n  * a column of type number means a series column.\n  * @param column to inspect\n  */\n  private getSeriesByColumn(column: number): number  {\n    let series = 0;\n    const dataTable = this.wrapper.getDataTable();\n    for (let i = column - 1; i >= 0; i--) {\n      const role = dataTable.getColumnRole(i);\n      const type = dataTable.getColumnType(i);\n      if (role === 'data' || type === 'number') {\n        series++;\n      }\n    }\n    return series;\n  }\n\n  private getBoundingBoxForItem(item: DataPointPosition): BoundingBox {\n    let boundingBox = {top: 0, left: 0, width: 0, height: 0};\n    if (this.cli) {\n      const column = item.column;\n      const series = this.getSeriesByColumn(column);\n      const row = item.row;\n      let seriesType = this.options.seriesType;\n      if (this.options.series && this.options.series[series] && this.options.series[series].type) {\n        seriesType = this.options.series[series].type;\n      }\n      if (seriesType) {\n        let selector = this.getSelectorBySeriesType(seriesType);\n        if (selector) {\n             selector = selector.replace('%s', series + '').replace('%c', column + '').replace('%r', row + '');\n             const box = this.cli.getBoundingBox(selector);\n             if (box) {\n              boundingBox = box;\n             }\n        }\n      }\n    }\n\n    return boundingBox;\n  }\n\n  private getValueAtPosition(position: DataPointPosition): any {\n    if (position.row == null) {\n      return null;\n    }\n    const dataTable = this.wrapper.getDataTable();\n    const value = dataTable.getValue(position.row, position.column);\n    return value;\n  }\n\n  private getColumnTypeAtPosition(position: DataPointPosition): string {\n      const dataTable = this.wrapper.getDataTable();\n      const type = dataTable.getColumnType(position.column) || '';\n      return type;\n  }\n\n  private getColumnLabelAtPosition(position: DataPointPosition): string {\n      const dataTable = this.wrapper.getDataTable();\n      const type = dataTable.getColumnLabel(position.column) || '';\n      return type;\n  }\n\n  private getHTMLTooltip(): ChartHTMLTooltip {\n    const tooltipER = new ElementRef(this.el.nativeElement.querySelector('.google-visualization-tooltip'));\n    return new ChartHTMLTooltip(tooltipER);\n  }\n\n  private parseMouseEvent(item: DataPointPosition): ChartMouseEvent {\n    const chartType = this.wrapper.getChartType();\n    let eventColumn = item.column;\n    if (eventColumn == null) {\n      switch (chartType) {\n        case 'Timeline':\n          eventColumn = this.wrapper.getDataTable().getNumberOfColumns() === 3 ? 0 : 1;\n          break;\n        default:\n          eventColumn = 0;\n      }\n    }\n    const eventRow = item.row;\n    const myItem = {\n      row: eventRow,\n      column: eventColumn\n    };\n    const event = {\n      position: item,\n      boundingBox: this.getBoundingBoxForItem(myItem),\n      value: this.getValueAtPosition(myItem),\n      columnType: this.getColumnTypeAtPosition(myItem),\n      columnLabel: this.getColumnLabelAtPosition(myItem)\n    };\n    return event;\n  }\n\n  private registerChartEvents(): void {\n    const chart = this.wrapper.getChart();\n    this.cli = chart.getChartLayoutInterface ? chart.getChartLayoutInterface() : null;\n    if (this.mouseOver.observers.length > 0) {\n      google.visualization.events.addListener(chart, 'onmouseover', (item: DataPointPosition) => {\n        const event: ChartMouseOverEvent = this.parseMouseEvent(item) as ChartMouseOverEvent;\n        event.tooltip = this.getHTMLTooltip();\n        this.mouseOver.emit(event);\n      });\n    }\n    if (this.mouseOverOneTime.observers.length > 0) {\n      google.visualization.events.addOneTimeListener(chart, 'onmouseover', (item: DataPointPosition) => {\n        const event: ChartMouseOverEvent = this.parseMouseEvent(item) as ChartMouseOverEvent;\n        event.tooltip = this.getHTMLTooltip();\n        this.mouseOverOneTime.emit(event);\n      });\n    }\n\n    if (this.mouseOut.observers.length > 0) {\n      google.visualization.events.addListener(chart, 'onmouseout', (item: DataPointPosition) => {\n        const event: ChartMouseOutEvent = this.parseMouseEvent(item) as ChartMouseOutEvent;\n        this.mouseOut.emit(event);\n      });\n    }\n\n    if (this.mouseOutOneTime.observers.length > 0) {\n      google.visualization.events.addOneTimeListener(chart, 'onmouseout', (item: DataPointPosition) => {\n        const event: ChartMouseOutEvent = this.parseMouseEvent(item) as ChartMouseOutEvent;\n        this.mouseOutOneTime.emit(event);\n      });\n    }\n\n    if (this.data.chartType === 'GeoChart') {\n      if (this.regionClick.observers.length > 0) {\n        google.visualization.events.addListener(chart, 'regionClick', (item: RegionClickEvent) => {\n          this.regionClick.emit(item);\n        });\n      }\n      if (this.regionClickOneTime.observers.length > 0) {\n        google.visualization.events.addOneTimeListener(chart, 'regionClick', (item: RegionClickEvent) => {\n          this.regionClick.emit(item);\n        });\n      }\n    }\n  }\n\n  private registerChartWrapperEvents(): void {\n    google.visualization.events.addListener(this.wrapper, 'ready', () => {\n      this.chartReady.emit({message: 'Chart ready'});\n    });\n\n    google.visualization.events.addOneTimeListener(this.wrapper, 'ready', () => {\n      this.chartReadyOneTime.emit({message: 'Chart ready (one time)'});\n      this.registerChartEvents();\n    });\n\n    google.visualization.events.addListener(this.wrapper, 'error', (error: any) => {\n      this.chartError.emit(error as ChartErrorEvent);\n    });\n\n    google.visualization.events.addOneTimeListener(this.wrapper, 'error', (error: any) => {\n      this.chartErrorOneTime.emit(error as ChartErrorEvent);\n    });\n\n    this.addListener(this.wrapper, 'select', this.selectListener, this.chartSelect);\n    this.addOneTimeListener(this.wrapper, 'select', this.selectListener, this.chartSelectOneTime);\n  }\n\n  private addListener(source: any, eventType: string, listenerFn: any, evEmitter: EventEmitter<any>) {\n    google.visualization.events.addListener(source, eventType, () => {\n      evEmitter.emit(listenerFn());\n    });\n  }\n\n  private addOneTimeListener(source: any, eventType: string, listenerFn: any, evEmitter: EventEmitter<any>) {\n    google.visualization.events.addOneTimeListener(source, eventType, () => {\n      evEmitter.emit(listenerFn());\n    });\n  }\n\n  private selectListener = () => {\n    const event: ChartSelectEvent = {\n      message: 'select',\n      row: null,\n      column: null,\n      selectedRowValues: [],\n      selectedRowFormattedValues: [],\n      columnLabel: ''\n    };\n    const s = this.wrapper.visualization.getSelection();\n    const gs = s[s.length - 1];\n    if (!gs) {\n      event.message = 'deselect';\n      return event;\n    }\n    const selection: DataPointPosition = gs;\n    if (gs.row != null) {\n      event.row = selection.row;\n\n      const selectedRowValues = [];\n      const selectedRowFormattedValues = [];\n      const dataTable = this.wrapper.getDataTable();\n      const numberOfColumns = dataTable.getNumberOfColumns();\n      for (let i = 0; i < numberOfColumns; i++) {\n        selectedRowValues.push(dataTable.getValue(selection.row, i));\n        selectedRowFormattedValues.push(dataTable.getFormattedValue(selection.row, i));\n      }\n      event.selectedRowValues = selectedRowValues;\n      event.selectedRowFormattedValues = selectedRowFormattedValues;\n    }\n    if (selection.column != null) {\n      event.column = selection.column;\n      event.columnLabel = this.getColumnLabelAtPosition(selection);\n    }\n    if (gs.name) {\n      event.columnLabel = gs.name;\n    }\n\n    return event;\n  }\n\n  private convertOptions() {\n    try {\n      this.options = google.charts[this.data.chartType].convertOptions(this.options);\n    } catch (error) {\n      return;\n    }\n  }\n}\n","\nimport { ElementRef } from '@angular/core';\n\nexport class ChartHTMLTooltip {\n\n  public static readonly PIXELS: string = 'px';\n\n  public constructor(private el: ElementRef) {}\n\n  public setPosition(x: number, y: number): void {\n    this.el.nativeElement.style.left = x + ChartHTMLTooltip.PIXELS;\n    this.el.nativeElement.style.top = y + ChartHTMLTooltip.PIXELS;\n  }\n\n  public getDOMElement(): ElementRef {\n    return this.el;\n  }\n\n}\n","declare var google: any;\n\nimport {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n} from '@angular/core';\n\nimport { GoogleChartsLoaderService } from '../google-charts-loader.service';\nimport { GoogleChartsDataTableInterface } from '../google-charts-datatable';\nimport { GoogleChartsControlInterface } from '../google-charts-control/google-charts-control.component';\nimport { GoogleChartInterface } from '../google-chart/google-chart.component';\nimport { GoogleChartsDataTable } from '../google-charts-datatable';\n\nexport interface GoogleChartsDashboardInterface extends\n GoogleChartsDataTableInterface {\n  bind: [\n    GoogleChartsControlInterface | GoogleChartsControlInterface[],\n    GoogleChartInterface | GoogleChartInterface[]\n  ][];\n  component?: GoogleChartsDashboardComponent;\n}\n\n@Component({\n  selector: 'google-charts-dashboard',\n  template: '<div></div>',\n})\nexport class GoogleChartsDashboardComponent implements OnInit {\n\n  @Input() public data: GoogleChartsDashboardInterface;\n\n  public dashboard: any;\n  public dataTable: GoogleChartsDataTable;\n\n  public constructor(private el: ElementRef,\n                     private loaderService: GoogleChartsLoaderService) {\n    this.el = el;\n    this.loaderService = loaderService;\n  }\n\n  ngOnInit() {\n    this.data.component = this;\n\n    this.init().then(() => {\n      if (!this.dataTable) {\n        this.dataTable = new GoogleChartsDataTable(this.data);\n        this.dataTable.dataTableChanged.subscribe((dt: any) => {\n          this._draw();\n        });\n      }\n      this.draw();\n    });\n  }\n\n  public async init() {\n    await this.loaderService.load({packages: ['controls'] });\n\n    this.dashboard = new google.visualization.Dashboard(\n      this.el.nativeElement.querySelector('div'));\n\n    for (const b of this.data.bind) {\n      let controls = b[0];\n      let charts = b[1];\n\n      if (!(controls instanceof Array)) {\n        controls = [controls];\n      }\n\n      if (!(charts instanceof Array)) {\n        charts = [charts];\n      }\n\n      for (const c of controls) {\n        await c.component.ensureInit();\n      }\n\n      for (const c of charts) {\n        await c.component.init();\n        const data = c.component.data;\n        if (data.dataTable !== undefined || data.dataSourceUrl !== undefined) {\n          throw Error('dataTable and dataSourceUrl cannot be specified when ' +\n                      'chart is drawn in a Dashboard');\n        }\n      }\n\n      this.dashboard.bind(controls.map(x => x.component.wrapper),\n                          charts.map(x => x.component.wrapper));\n    }\n  }\n\n  public draw(value?: GoogleChartInterface) {\n    this.dataTable.init(value);\n  }\n\n  private _draw() {\n    this.dashboard.draw(this.dataTable.getDataTable());\n  }\n}\n","declare var google: any;\n\nexport interface GoogleChartsControlInterface {\n  controlType: string;\n  options?: object;\n  state?: object;\n  component?: GoogleChartsControlComponent;\n}\n\nimport {\n  Component, OnInit, Input,\n  ElementRef\n} from '@angular/core';\n\nimport { GoogleChartsLoaderService } from '../google-charts-loader.service';\n\ninterface InternalGoogleChartsControlOptions extends GoogleChartsControlInterface {\n  containerId: string;\n}\n@Component({\n  selector: 'google-charts-control',\n  template: '<div></div>',\n})\nexport class GoogleChartsControlComponent implements OnInit {\n\n  @Input() public data: GoogleChartsControlInterface;\n\n  public wrapper: any;\n\n  public constructor(private el: ElementRef,\n                     private loaderService: GoogleChartsLoaderService) {\n    this.el = el;\n    this.loaderService = loaderService;\n  }\n\n  ngOnInit() {\n    this.data.component = this;\n  }\n\n  public async ensureInit() {\n    if (this.wrapper) {\n      return;\n    }\n    await this.loaderService.load({packages: ['controls'] });\n    let opt: InternalGoogleChartsControlOptions;\n    opt = Object.create(this.data);\n    opt.containerId = this.el.nativeElement.querySelector('div');\n    this.wrapper = new google.visualization.ControlWrapper(opt);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { GoogleChartComponent } from './google-chart/google-chart.component';\nimport { GoogleChartsLoaderService } from './google-charts-loader.service';\nimport { GoogleChartsDashboardComponent } from './google-charts-dashboard/google-charts-dashboard.component';\nimport { GoogleChartsControlComponent } from './google-charts-control/google-charts-control.component';\n\n@NgModule({\n    declarations: [\n      GoogleChartComponent,\n      GoogleChartsDashboardComponent,\n      GoogleChartsControlComponent,\n    ],\n    providers: [\n      GoogleChartsLoaderService\n    ],\n    exports: [\n      GoogleChartComponent,\n      GoogleChartsDashboardComponent,\n      GoogleChartsControlComponent,\n    ]\n})\nexport class Ng2GoogleChartsModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { GoogleChartsLoaderService } from './google-charts-loader.service';\nimport { GoogleChartComponent, GoogleChartInterface } from './google-chart/google-chart.component';\nimport { GoogleChartWrapper } from './google-charts-interfaces';\n\nfunction isComponent(chart: GoogleChartComponent | GoogleChartInterface): chart is GoogleChartComponent {\n  return (chart as GoogleChartComponent).wrapper !== undefined;\n}\n\ndeclare var google: any;\n\nexport interface GoogleChartEditorOptions {\n  dataSourceInput?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleChartEditor {\n\n  chartEditor: any;\n\n  private comp: GoogleChartComponent;\n\n  public constructor(private loaderService: GoogleChartsLoaderService){}\n\n  private async createEditor() {\n    if (this.chartEditor !== undefined) {\n      return;\n    }\n    await this.loaderService.load({ packages: ['charteditor'] });\n    this.chartEditor = new google.visualization.ChartEditor();\n    google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n      const wrapper = this.chartEditor.getChartWrapper();\n      this.comp.wrapper = wrapper;\n      this.comp.data.chartType = wrapper.getChartType();\n      if (this.comp.data.options !== undefined || Object.isExtensible(this.comp.data)) {\n        this.comp.data.options = wrapper.getOptions();\n      }\n      this.comp.wrapper.draw();\n    });\n  }\n\n  public async openDialog(chart: GoogleChartComponent | GoogleChartInterface, options?: GoogleChartEditorOptions): Promise<GoogleChartWrapper | any> {\n    await this.createEditor();\n\n    return new Promise((resolve, reject) => {\n      this.comp = isComponent(chart) ? chart : chart.component;\n      this.chartEditor.openDialog(this.comp.wrapper, options);\n      google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n        resolve(this.comp.wrapper);\n      });\n      google.visualization.events.addListener(this.chartEditor, 'cancel', () => {\n        reject();\n      });\n    });\n  }\n\n}\n"]}